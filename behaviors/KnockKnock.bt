{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "decorators": [],
        "children": [
            41,
            45,
            23,
            49,
            42,
            48
        ],
        "options": {}
    },
    "16": {
        "id": 16,
        "class": "Subtree",
        "name": "Tell a joke",
        "asset-pack": "core",
        "parent": 25,
        "decorators": [],
        "options": {
            "behaviorPath": "TellOneJoke.bt",
            "getNotepad": [
                "() => {",
                "    console.log('knock-knock: tell-one-joke.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "20": {
        "id": 20,
        "class": "Subtree",
        "name": "Hear a joke",
        "asset-pack": "core",
        "parent": 25,
        "skipped": false,
        "decorators": [],
        "options": {
            "behaviorPath": "HearAJoke.bt",
            "getNotepad": [
                "() => {",
                "    console.log('knock-knock: hear-a-joke.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "22": {
        "id": 22,
        "class": "TextToSpeech",
        "name": "",
        "asset-pack": "core",
        "parent": 25,
        "options": {
            "words": "Now will you please tell me a knock knock joke?",
            "onWord": [
                "(word) => {",
                "}"
            ]
        }
    },
    "23": {
        "id": 23,
        "class": "TimeoutJs",
        "name": "Wait 5 seconds",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "getTime": [
                "() => {",
                "    return 5000;",
                "}"
            ]
        }
    },
    "24": {
        "id": 24,
        "class": "Parallel",
        "name": "",
        "asset-pack": "core",
        "parent": 42,
        "children": [
            27,
            25
        ],
        "options": {
            "succeedOnOne": false
        }
    },
    "25": {
        "id": 25,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 24,
        "children": [
            16,
            30,
            22,
            34,
            20,
            35
        ],
        "options": {}
    },
    "26": {
        "id": 26,
        "class": "Subtree",
        "name": "",
        "asset-pack": "core",
        "parent": 27,
        "decorators": [
            29
        ],
        "options": {
            "behaviorPath": "attitudes/idle.bt",
            "getNotepad": [
                "() => {",
                "  console.log('knock-knock: idle.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "27": {
        "id": 27,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 24,
        "children": [
            26,
            28
        ],
        "skipped": false,
        "options": {}
    },
    "28": {
        "id": 28,
        "class": "Subtree",
        "name": "",
        "asset-pack": "core",
        "parent": 27,
        "decorators": [
            32
        ],
        "options": {
            "behaviorPath": "attitudes/center.bt",
            "getNotepad": [
                "() => {",
                "    console.log('knock-knock: center.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "29": {
        "id": 29,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKmovestop",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "30": {
        "id": 30,
        "class": "ExecuteScript",
        "name": "Start movement again",
        "asset-pack": "core",
        "parent": 25,
        "options": {
            "exec": [
                "() => {",
                "  emitter.emit('KKmovestart');",
                "  console.log('knock-knock: Start moving.');",
                "}"
            ]
        }
    },
    "31": {
        "id": 31,
        "class": "Subtree",
        "name": "Explain ",
        "asset-pack": "core",
        "parent": 55,
        "options": {
            "behaviorPath": "ExplainJokes.bt",
            "getNotepad": [
                "() => {",
                "    console.log('knock-knock: explain.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "32": {
        "id": 32,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKmovestart",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "34": {
        "id": 34,
        "class": "ExecuteScript",
        "name": "Stop movement for subtree",
        "asset-pack": "core",
        "parent": 25,
        "options": {
            "exec": [
                "() => {",
                "  emitter.emit('KKmovestop');",
                "  console.log('knock-knock: Stop moving.');",
                "}"
            ]
        }
    },
    "35": {
        "id": 35,
        "class": "ExecuteScript",
        "name": "Start movement again",
        "asset-pack": "core",
        "parent": 25,
        "options": {
            "exec": [
                "() => {",
                "  emitter.emit('KKmovestart');",
                "  console.log('knock-knock: Start moving.bt');",
                "}"
            ]
        }
    },
    "40": {
        "id": 40,
        "class": "ExecuteScript",
        "name": "Stop movement for subtree",
        "asset-pack": "core",
        "parent": 55,
        "options": {
            "exec": [
                "() => {",
                "  emitter.emit('KKmovestop');",
                "    console.log('knock-knock: Stop moving.');",
                "}"
            ]
        }
    },
    "41": {
        "id": 41,
        "class": "ExecuteScript",
        "name": "Set up paths",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "exec": [
                "() => {",
                "  let path = require ('path');",
                "",
                "  if (!notepad.rulesPath) {",
                "  notepad.rulesPath = path.resolve(__dirname, '../rules/KnockKnock');",
                "  }",
                "  if (!notepad.mimsPath) {",
                "  notepad.mimsPath =  path.resolve(__dirname, '../mims/KnockKnock');",
                "  }",
                "  ",
                "  console.log(\"KnockKnock.bt: notepad.rulesPath=\"+notepad.rulesPath);",
                "  console.log(\"KnockKnock.bt: notepad.mimsPath=\"+notepad.mimsPath);",
                "}",
                "}"
            ]
        }
    },
    "42": {
        "id": 42,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "children": [
            24
        ],
        "decorators": [
            43,
            47
        ],
        "options": {}
    },
    "43": {
        "id": 43,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    return true;",
                "}"
            ]
        }
    },
    "45": {
        "id": 45,
        "class": "ExecuteScript",
        "name": "Set up jokes",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "exec": [
                "() => {",
                "  notepad.jokes = [",
                "      ['canoe','Canoe help me with my homework?'],",
                "      ['orange','Orange you going to let me in?'],",
                "      ['needle','Needle little money for the movies.']",
                "  ]; ",
                "}"
            ]
        }
    },
    "47": {
        "id": 47,
        "class": "SucceedOnEmbedded",
        "name": "",
        "asset-pack": "core",
        "options": {
            "rule": "hey_jibo",
            "onResult": [
                "(listener) => {",
                "\tlistener.on('hey-jibo', (asrResult, speakerIds) => {",
                "",
                "\t});",
                "}"
            ]
        }
    },
    "48": {
        "id": 48,
        "class": "TextToSpeech",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "words": "Thanks for playing knock knock jokes with me. It really makes my day!",
            "onWord": [
                "(word) => {",
                "}"
            ]
        }
    },
    "49": {
        "id": 49,
        "class": "Sequence",
        "name": "Prompt for explanation",
        "asset-pack": "core",
        "parent": 1,
        "children": [
            50,
            51
        ],
        "options": {}
    },
    "50": {
        "id": 50,
        "class": "Mim",
        "name": "\"Do you know how knock knock jokes work?\"",
        "asset-pack": "project",
        "parent": 49,
        "decorators": [
            54,
            53
        ],
        "options": {
            "getConfig": [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockNeedExplanation',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath,",
                "\t\trule: \"TopRule = $* $factory:yes_no{response=yes_no._nl} $*;\",",
                "\t\tincremental: false,",
                "\t\tdetectEnd: true,",
                "\t}",
                "}"
            ],
            "onStatus": [
                "(status) =>  {",
                "}"
            ],
            "onResults": [
                "(results) =>  {",
                "  console.log(`KnockKnock.bt: KnockKnockNeedExplanation: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    notepad.explain=(results.asrResults.nlParse.response==='yes');",
                "    console.log(\"notepad.explain: \"+notepad.explain);",
                "    emitter.emit('KKbreak');",
                "  } ",
                "  ",
                "}"
            ]
        }
    },
    "51": {
        "id": 51,
        "class": "Switch",
        "name": "",
        "asset-pack": "core",
        "parent": 49,
        "children": [
            55
        ],
        "decorators": [],
        "options": {}
    },
    "53": {
        "id": 53,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKbreak",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "54": {
        "id": 54,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    return true;",
                "}"
            ]
        }
    },
    "55": {
        "id": 55,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 51,
        "children": [
            40,
            31
        ],
        "decorators": [
            56
        ],
        "options": {}
    },
    "56": {
        "id": 56,
        "class": "Case",
        "name": "",
        "asset-pack": "core",
        "options": {
            "conditional": [
                "() => {",
                "  return notepad.explain;",
                "}"
            ]
        }
    },
    "meta": {
        "version": 1
    }
}