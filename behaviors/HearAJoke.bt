{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "args": [],
        "children": [
            57,
            71,
            53
        ],
        "decorators": []
    },
    "3": {
        "id": 3,
        "class": "TextToSpeech",
        "name": "\"Who's There\"",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            "Who's there?",
            [
                "(word) => {",
                "}"
            ]
        ]
    },
    "4": {
        "id": 4,
        "class": "Listen",
        "name": "Listen for phrase",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            [
                "() => {",
                "    let options = {",
                "        heyJibo: false,",
                "        detectEnd: true,",
                "        incremental: false,",
                "        authenticateSpeaker: ''",
                "    }",
                "    return options;",
                "}"
            ],
            "anything.rule",
            [
                "(listener) => {",
                "    listener.on('cloud', (asrResult, speakerIds) => {",
                "      notepad.result=asrResult;",
                "    });",
                "}"
            ]
        ],
        "skipped": true,
        "decorators": []
    },
    "5": {
        "id": 5,
        "class": "TextToSpeechJs",
        "name": "\"<phrase> who?\"",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            [
                "(callback) => {",
                "  callback(notepad.result.NLParse.phrase.concat(' who?'));",
                "}"
            ],
            [
                "(word) => {",
                "}"
            ]
        ],
        "skipped": true
    },
    "6": {
        "id": 6,
        "class": "Listen",
        "name": "Listen for anything",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            [
                "() => {",
                "    let options = {",
                "        heyJibo: false,",
                "        detectEnd: true,",
                "        incremental: false,",
                "        authenticateSpeaker: ''",
                "    }",
                "    return options;",
                "}"
            ],
            "anything.rule",
            [
                "(listener) => {",
                "    listener.on('cloud', (asrResult, speakerIds) => {",
                "",
                "    });",
                "}"
            ]
        ],
        "skipped": true,
        "decorators": []
    },
    "7": {
        "id": 7,
        "class": "PlayAnimation",
        "name": "Laugh no matter what",
        "asset-pack": "core",
        "parent": 64,
        "args": [
            "laugh.keys",
            [
                "(animation) => {",
                "}"
            ]
        ]
    },
    "16": {
        "id": 16,
        "class": "Subtree",
        "name": "Listen for \"Knock Knock\"",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            "Utility/ListenForString.bt",
            [
                "() => {",
                "    console.log('hear-a-joke: listen-for-string.bt');",
                "    return { expectedResponse: 'knock knock'};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "skipped": true
    },
    "17": {
        "id": 17,
        "class": "Subtree",
        "name": "Attentive",
        "asset-pack": "core",
        "parent": 20,
        "args": [
            "attitudes/attentive.bt",
            [
                "() => {",
                "    console.log('hear-a-joke: attentive.bt');",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "decorators": [
            22
        ]
    },
    "20": {
        "id": 20,
        "class": "Sequence",
        "name": "Incidental behavior",
        "asset-pack": "core",
        "parent": 32,
        "args": [],
        "children": [
            17,
            42
        ],
        "skipped": false,
        "decorators": [
            55,
            54
        ]
    },
    "22": {
        "id": 22,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "KKmovestop",
            [
                "() => {",
                "}"
            ]
        ],
        "parent": null
    },
    "32": {
        "id": 32,
        "class": "Parallel",
        "name": "",
        "asset-pack": "core",
        "parent": 71,
        "args": [
            false
        ],
        "children": [
            20,
            33
        ]
    },
    "33": {
        "id": 33,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 32,
        "args": [],
        "children": [
            16,
            75,
            56,
            3,
            4,
            60,
            5,
            6,
            62,
            63
        ],
        "decorators": [
            77,
            76
        ]
    },
    "42": {
        "id": 42,
        "class": "Subtree",
        "name": "Center",
        "asset-pack": "core",
        "parent": 20,
        "args": [
            "attitudes/center.bt",
            [
                "() => {",
                "    console.log('hear-a-joke: center.bt');",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "decorators": [
            43
        ]
    },
    "43": {
        "id": 43,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "KKmovestart",
            [
                "() => {",
                "}"
            ]
        ]
    },
    "53": {
        "id": 53,
        "class": "ExecuteScript",
        "name": "End tree",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            [
                "() => {",
                "  emitter.emit('KKmovestop');",
                "  emitter.emit('KKtreedone');",
                "  console.log('hear-a-joke: Ending tree.');",
                "}"
            ]
        ]
    },
    "54": {
        "id": 54,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "KKtreedone",
            [
                "() => {",
                "}"
            ]
        ]
    },
    "55": {
        "id": 55,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "args": [
            [
                "() => {",
                "}"
            ],
            [
                "() => {",
                "    return true;",
                "}"
            ]
        ]
    },
    "56": {
        "id": 56,
        "class": "Mim",
        "name": "Listen for \"Knock \"Knock\"",
        "asset-pack": "project",
        "parent": 33,
        "args": [
            [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockWaitForKnockKnock',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath",
                "\t}",
                "}"
            ],
            [
                "(status) =>  {",
                "}"
            ],
            [
                "(results) =>  {",
                "  console.log(`HearAJoke.bt: KnockKnockWaitForKnockKnock: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    notepad.readyToContinue = true;",
                "  }",
                "}"
            ]
        ],
        "decorators": [
            59
        ]
    },
    "57": {
        "id": 57,
        "class": "ExecuteScript",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            [
                "() => {  ",
                "  ",
                "  notepad.readyToContinue = false;",
                "    ",
                "  let path = require ('path');",
                "",
                "  if (!notepad.rulesPath) {",
                "  notepad.rulesPath = path.resolve(__dirname, '../rules/');",
                "  }",
                "  if (!notepad.mimsPath) {",
                "  notepad.mimsPath =  path.resolve(__dirname, '../mims/');",
                "  }",
                "}"
            ]
        ]
    },
    "59": {
        "id": 59,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "args": [
            [
                "() => {",
                "}"
            ],
            [
                "() => {",
                "  return !notepad.readyToContinue;",
                "}"
            ]
        ]
    },
    "60": {
        "id": 60,
        "class": "Mim",
        "name": "Listen for phrase",
        "asset-pack": "project",
        "parent": 33,
        "args": [
            [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockWaitForAnything',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath",
                "\t}",
                "}"
            ],
            [
                "(status) =>  {",
                "}"
            ],
            [
                "(results) =>  {",
                "  console.log(`HearAJoke.bt: KnockKnockWaitForAnything: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    notepad.phrase=results.asrResults.nlParse.phrase;",
                "  }",
                "}"
            ]
        ]
    },
    "62": {
        "id": 62,
        "class": "Mim",
        "name": "\"<phrase> who?\"",
        "asset-pack": "project",
        "parent": 33,
        "args": [
            [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockWhosThere',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath,",
                "\t\trule: \"TopRule = $* \"+notepad.phrase+\" {slotAction='continue'} $*;\",",
                "\t\tincremental: false,",
                "\t\tdetectEnd: true,",
                "\t\tpromptData: {",
                "\t\t\tphrase: notepad.phrase",
                "\t\t}",
                "\t}",
                "}"
            ],
            [
                "(status) =>  {",
                "}"
            ],
            [
                "(results) =>  {",
                "  console.log(`HearAJoke.bt: KnockKnockWhosThere: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    notepad.goodJoke=true;",
                "  }",
                "  if (results.asrResults.state === 'noMatch') {",
                "    notepad.goodJoke=false;",
                "  }",
                "}"
            ]
        ]
    },
    "63": {
        "id": 63,
        "class": "Switch",
        "name": "",
        "asset-pack": "core",
        "parent": 33,
        "args": [],
        "children": [
            64,
            65
        ]
    },
    "64": {
        "id": 64,
        "class": "Sequence",
        "name": "Good Joke",
        "asset-pack": "core",
        "parent": 63,
        "args": [],
        "decorators": [
            66
        ],
        "children": [
            7,
            70
        ]
    },
    "65": {
        "id": 65,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 63,
        "args": [],
        "children": [
            67
        ]
    },
    "66": {
        "id": 66,
        "class": "Case",
        "name": "",
        "asset-pack": "core",
        "args": [
            [
                "() => {",
                "  return notepad.goodJoke;",
                "}"
            ]
        ]
    },
    "67": {
        "id": 67,
        "class": "TextToSpeech",
        "name": "\"I don't get it.\"",
        "asset-pack": "core",
        "parent": 65,
        "args": [
            "I'm sorry, I just don't get it. Perhaps you could tell me another?",
            [
                "(word) => {",
                "}"
            ]
        ]
    },
    "70": {
        "id": 70,
        "class": "ExecuteScript",
        "name": "",
        "asset-pack": "core",
        "parent": 64,
        "args": [
            [
                "() => {",
                "  emitter.emit('KKgoodjoke');",
                "}"
            ]
        ]
    },
    "71": {
        "id": 71,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "args": [],
        "children": [
            32
        ],
        "decorators": []
    },
    "75": {
        "id": 75,
        "class": "ExecuteScript",
        "name": "",
        "asset-pack": "core",
        "parent": 33,
        "args": [
            [
                "() => {",
                "    notepad.readyToContinue = false;",
                "}"
            ]
        ]
    },
    "76": {
        "id": 76,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "KKgoodjoke",
            [
                "() => {",
                "}"
            ]
        ]
    },
    "77": {
        "id": 77,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "args": [
            [
                "() => {",
                "}"
            ],
            [
                "() => {",
                "    return true;",
                "}"
            ]
        ]
    }
}