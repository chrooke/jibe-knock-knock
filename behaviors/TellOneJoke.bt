{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "children": [
            64,
            5,
            56
        ],
        "decorators": [],
        "options": {}
    },
    "5": {
        "id": 5,
        "class": "ExecuteScript",
        "name": "Pick a joke",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "exec": [
                "() => {",
                "  if (notepad.jokes == undefined) {",
                "    notepad.jokes = [",
                "  \t\t\t['canoe','Canoe help me with my homework?'],",
                "  \t\t\t['orange','Orange you going to let me in?'],",
                "  \t\t\t['needle','Needle little money for the movies.']",
                "  \t];  ",
                "  }  ",
                "  var joke=Math.round(Math.random()*((notepad.jokes.length)-1));",
                "",
                "  notepad.setup=notepad.jokes[joke][0];",
                "  notepad.punchline=notepad.jokes[joke][1];",
                "",
                "}"
            ]
        }
    },
    "11": {
        "id": 11,
        "class": "TextToSpeechJs",
        "name": "\"punchline\"",
        "asset-pack": "core",
        "parent": 15,
        "options": {
            "getWords": [
                "(callback) => {",
                "    callback(notepad.punchline);",
                "}"
            ],
            "onWord": [
                "(word) => {",
                "}"
            ]
        }
    },
    "12": {
        "id": 12,
        "class": "PlayAnimation",
        "name": "",
        "asset-pack": "core",
        "parent": 15,
        "options": {
            "animPath": "laugh.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        }
    },
    "15": {
        "id": 15,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "parent": 56,
        "children": [
            57,
            62,
            11,
            12,
            53
        ],
        "options": {}
    },
    "17": {
        "id": 17,
        "class": "Subtree",
        "name": "Attentive",
        "asset-pack": "core",
        "parent": 20,
        "decorators": [
            22
        ],
        "options": {
            "behaviorPath": "attitudes/attentive.bt",
            "getNotepad": [
                "() => {",
                "    console.log('tell-one-joke: attentive.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "20": {
        "id": 20,
        "class": "Sequence",
        "name": "Incidental behavior",
        "asset-pack": "core",
        "parent": 56,
        "children": [
            17,
            42
        ],
        "skipped": false,
        "decorators": [
            54,
            55
        ],
        "options": {}
    },
    "22": {
        "id": 22,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "parent": 0,
        "options": {
            "eventName": "KKmovestop",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "42": {
        "id": 42,
        "class": "Subtree",
        "name": "Center",
        "asset-pack": "core",
        "parent": 20,
        "decorators": [
            43
        ],
        "options": {
            "behaviorPath": "attitudes/center.bt",
            "getNotepad": [
                "() => {",
                "    console.log('tell-one-joke: center.bt');",
                "    return {};",
                "}"
            ],
            "onResult": [
                "(treeResult) => {",
                "}"
            ]
        }
    },
    "43": {
        "id": 43,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "parent": null,
        "options": {
            "eventName": "KKmovestart",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "53": {
        "id": 53,
        "class": "ExecuteScript",
        "name": "End tree",
        "asset-pack": "core",
        "parent": 15,
        "options": {
            "exec": [
                "() => {",
                "  emitter.emit('KKmovestop');",
                "  emitter.emit('KKtreedone');",
                "  console.log('tell-one-joke: Ending tree.');",
                "",
                "}"
            ]
        }
    },
    "54": {
        "id": 54,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKtreedone",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "55": {
        "id": 55,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    return true;",
                "}"
            ]
        }
    },
    "56": {
        "id": 56,
        "class": "Parallel",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "children": [
            20,
            15
        ],
        "options": {
            "succeedOnOne": false
        }
    },
    "57": {
        "id": 57,
        "class": "Mim",
        "name": "\"knock knock\" \"who's there?\"",
        "asset-pack": "project",
        "parent": 15,
        "decorators": [
            69,
            58
        ],
        "options": {
            "getConfig": [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockWaitForWhosThere',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath,",
                "\t\trule: \"TopRule = $* whos there {slotAction='continue'} $*;\",",
                "\t}",
                "}"
            ],
            "onStatus": [
                "(status) =>  {",
                "}"
            ],
            "onResults": [
                "(results) =>  {",
                "  console.log(`TellOneJoke.bt: KnockKnockWaitForWhosThere: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    emitter.emit('KKbreak');",
                "    console.log('TellOneJoke.bt: KKbreak');",
                "  }",
                "}"
            ]
        }
    },
    "58": {
        "id": 58,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "  return true;",
                "}"
            ]
        }
    },
    "62": {
        "id": 62,
        "class": "Mim",
        "name": "\"<setup>\" \"<setup> who?\"",
        "asset-pack": "project",
        "parent": 15,
        "decorators": [
            68,
            65
        ],
        "options": {
            "getConfig": [
                "() =>  {",
                "\treturn {",
                "\t\tmimId: 'KnockKnockSetupWho',",
                "\t\trulesPath: notepad.rulesPath,",
                "\t\tmimsPath: notepad.mimsPath,",
                "\t\trule: \"TopRule = \"+notepad.setup+\" who {slotAction='continue'} $*;\",",
                "\t\tincremental: false,",
                "\t\tdetectEnd: true,",
                "\t\tpromptData: {",
                "\t\t\tsetup: notepad.setup",
                "\t\t}",
                "\t}",
                "}"
            ],
            "onStatus": [
                "(status) =>  {",
                "}"
            ],
            "onResults": [
                "(results) =>  {",
                "  console.log(`TellOneJoke.bt: KnockKnockSetupWho: onResults: `);",
                "  console.log(results);",
                "  ",
                "  if (results.speakerIds.primarySpeaker) {",
                "    notepad.userName = results.speakerIds.primarySpeaker;",
                "  }",
                "  ",
                "  console.log(results.asrResults, `State: ${results.asrResults.state}`, results.asrResults);",
                "  if (results.asrResults.state === 'match') {",
                "    emitter.emit('KKbreak');",
                "    console.log('TellOneJoke.bt: KKbreak');",
                "  }",
                "}"
            ]
        }
    },
    "64": {
        "id": 64,
        "class": "ExecuteScript",
        "name": "Set up paths",
        "asset-pack": "core",
        "parent": 1,
        "options": {
            "exec": [
                "() => {    ",
                "  let path = require ('path');",
                "",
                "  if (!notepad.rulesPath) {",
                "  notepad.rulesPath = path.resolve(__dirname, '../rules/KnockKnock');",
                "  }",
                "  if (!notepad.mimsPath) {",
                "  notepad.mimsPath =  path.resolve(__dirname, '../mims/KnockKnock');",
                "  }",
                "}"
            ]
        }
    },
    "65": {
        "id": 65,
        "class": "WhileCondition",
        "name": "",
        "asset-pack": "core",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    return true;",
                "}"
            ]
        }
    },
    "68": {
        "id": 68,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKbreak",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "69": {
        "id": 69,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "options": {
            "eventName": "KKbreak",
            "onEvent": [
                "() => {",
                "}"
            ]
        }
    },
    "meta": {
        "version": 1
    }
}